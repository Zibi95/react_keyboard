{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","this","handlePress","bind","removeEventListener","event","setState","key","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKC,YAAYC,KAAKF,SAN7D,kCASE,WACEF,SAASK,oBAAoB,QAASH,KAAKC,eAV/C,yBAaE,SAAYG,GACVJ,KAAKK,SAAS,CACZR,WAAYO,EAAME,QAfxB,oBAmBE,WACE,IAAQT,EAAeG,KAAKJ,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGV,EAAU,mCACqBA,EADrB,KAEP,kCA3Bd,GAAyBW,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAb,SAASc,eAAe,W","file":"static/js/main.424f1098.chunk.js","sourcesContent":["import React from 'react';\n\ntype AppState = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<{}, AppState> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlePress.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlePress);\n  }\n\n  handlePress(event: KeyboardEvent) {\n    this.setState({\n      pressedKey: event.key,\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}